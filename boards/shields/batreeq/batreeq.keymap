
#include <dt-bindings/zmk/mouse.h>
 
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define APT 0
#define NUM 1
#define NAV 2
#define SYM 3
#define FUN 4

// &lt {
//     quick_tap_ms = <170>;
// };

&caps_word {
    continue-list = <UNDERSCORE MINUS BSPC LSHFT RSHFT>;
};


#define COMBO(NAME, BINDINGS, KEYPOS) \
combo_##NAME { \
    timeout-ms = <30>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
};

/ {
    combos {
        compatible = "zmk,combos";
/* usually on base layer */
        COMBO(q, &kp Q, 2 3)
        COMBO(z, &kp Z, 20 21)
        COMBO(v, &kp V, 1 2)
        COMBO(_ae, &kp RA(A), 15 26)
        COMBO(_oe, &kp RA(O), 17 26)
        COMBO(_ue, &kp RA(U), 6 26)
        COMBO(_sz, &kp RA(S), 9 25)
        COMBO(slash, &kp SLASH, 24 25)
        COMBO(dash, &kp MINUS, 23 24)
//        COMBO(enter, &kp ENTER, 21 22 23)
        COMBO(enter, &kp ENTER, 23 17)
        COMBO(esc, &kp ESC, 21 22)
/* parentheticals */
        COMBO(lbrc, &kp LBRC, 1 11)
        COMBO(lbkt, &kp LBKT, 2 12)
        COMBO(lpar, &kp LPAR, 3 13)
        COMBO(lt, &kp LT, 4 14)
        COMBO(gt, &kp GT, 5 15)
        COMBO(rpar, &kp RPAR, 6 16)
        COMBO(rbkt, &kp RBKT, 7 17)
        COMBO(rbrc, &kp RBRC, 8 18)
/* caps */
        COMBO(caps, &caps_word, 13 16)
        COMBO(capslock, &kp CAPSLOCK, 1 8)
/* deletion */
        COMBO(bspc, &kp BSPC, 12 13)
        COMBO(del, &kp DEL, 7 8)
        COMBO(delword, &kp LC(BSPC), 16 17)
/* alternative shifting 
        COMBO(Sq, &kp LS(Q), 1 2 25)
        COMBO(Sz, &kp LS(Z), 18 19 25)
        COMBO(Sv, &kp LS(V), 0 1 25)
        COMBO(Sw, &kp LS(W), 0 25)
        COMBO(Sf, &kp LS(F), 1 25)
        COMBO(Sp, &kp LS(P), 2 25)
        COMBO(Sb, &kp LS(B), 3 25)
        COMBO(Sj, &kp LS(J), 4 26)
        COMBO(Sl, &kp LS(L), 5 26)
        COMBO(Su, &kp LS(U), 6 26)
        COMBO(Sy, &kp LS(Y), 7 26)
        COMBO(Sr, &kp LS(R), 8 25)
        COMBO(Ss, &kp LS(S), 9 25)
        COMBO(St, &kp LS(T), 10 25)
        COMBO(Sh, &kp LS(H), 11 25)
        COMBO(Sk, &kp LS(K), 12 25)
        COMBO(Sx, &kp LS(X), 13 26)
        COMBO(Sn, &kp LS(N), 14 26)
        COMBO(Sa, &kp LS(A), 15 26)
        COMBO(Si, &kp LS(I), 16 26)
        COMBO(So, &kp LS(O), 17 26)
        COMBO(Sc, &kp LS(C), 18 25)
        COMBO(Sg, &kp LS(G), 19 25)
        COMBO(Sd, &kp LS(D), 20 25)
        COMBO(Sm, &kp LS(M), 21 26)
        COMBO(Scomma, &kp SEMI, 22 26)
        COMBO(Sdot, &kp COLON, 23 26)
        COMBO(Se, &kp LS(E), 14 15 26)*/
    };
};

/*                KEY POSITIONS

  ╭────────────────────╮ ╭────────────────────╮
  │  0   1   2   3   4 │ │  5   6   7   8   9 │
  │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
  │     20  21  22     │ │     23  24  25     │
  ╰───────────╮ 26  27 │ │ 28  29 ╭───────────╯
              ╰────────╯ ╰────────╯            
*/ 

/ {

    behaviors {
        hl: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods left";
            #binding-cells = <2>;
            // flavor = "tap-preferred";
            flavor = "balanced";
            tapping-term-ms = <150>;
            quick-tap-ms = <100>;
            // global-quick-tap;
            bindings = <&kp>, <&kp>;
            // opposite side hand keys
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 23 24 25 28 29>;
        };
        hr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods right";
            #binding-cells = <2>;
            // flavor = "tap-preferred";
            flavor = "balanced";
            tapping-term-ms = <150>;
            quick-tap-ms = <100>;
            // global-quick-tap;
            bindings = <&kp>, <&kp>;
            // opposite side hand keys
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 26 27>;
        };

        my_lt: my_layer_taps {
            compatible = "zmk,behavior-hold-tap";
            label = "my layer taps";
            #binding-cells = <2>;
            // flavor = "tap-preferred";
            flavor = "balanced";
            tapping-term-ms = <150>;
            quick-tap-ms = <100>;
            // global-quick-tap;
            bindings = <&mo>, <&kp>;
            // non-thumb keys
            // hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23>;
        };

        dotcol: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_COL";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        comsem: comma_semicolon {
            compatible = "zmk,behavior-mod-morph";
            label = "COM_SEM";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};
/*                KEY POSITIONS

  ╭────────────────────╮ ╭────────────────────╮
  │  0   1   2   3   4 │ │  5   6   7   8   9 │
  │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
  │     20  21  22     │ │     23  24  25     │
  ╰───────────╮ 26  27 │ │ 28  29 ╭───────────╯
              ╰────────╯ ╰────────╯            
*/ 

/ {

    keymap {
        compatible = "zmk,keymap";

        aptmak {
            label = "APT";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            bindings = <
                &kp ESC        &kp W          &kp F          &kp P          &kp B          &kp J          &kp L          &kp U          &kp Y          &kp ESC
                &hl LGUI R    &hl LALT S     &hl LCTRL T     &hl LSHFT H    &hl RALT K     &hr RALT X     &hr RSHFT N    &hr RCTRL A     &hr LALT I     &hr RGUI O
                               &kp C          &kp G          &kp D                                        &kp M          &comsem        &dotcol
                                                             &my_lt NUM SQT &my_lt NAV SPACE &my_lt SYM E &my_lt FUN TAB
                                                             &none &mkp LCLK &mkp RCLK &none
                                                    //5way  CLICK       RIGHT       DOWN      LEFT      UP 
                                                            &mkp MCLK   &kp RIGHT   &kp DOWN  &kp LEFT  &kp UP
            >;
        };
        numbers {
            label = "NUM";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            bindings = <
                &none            &none             &none                &none              &none          &none          &kp N7         &kp N8         &kp N9    &none 
                &hl LGUI KP_PLUS &hl LALT KP_MINUS &hl LCTRL KP_ASTERISK &hl LSHFT KP_SLASH &kp RALT       &none          &kp N4         &kp N5         &kp N6         &kp DOT
                                  &kp N9            &kp N8               &kp N7                                           &kp N1         &kp N2         &kp N3
                                                             &trans         &trans         &kp E          &kp N0
                                                             &trans &trans &trans &trans
                                                             &trans &trans &trans &trans &trans
            >;
        };
        navigation {
            label = "NAV";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            bindings = <
                &none         &none          &none          &none           &kp C_VOL_UP   &kp LC(X)      &kp LC(INSERT) &kp LS(INSERT) &kp INSERT      &none 
                &sk LGUI      &sk LALT       &sk LCTRL       &sk LSHFT       &kp C_VOL_DN   &kp C_MUTE     &kp LEFT       &kp DOWN       &kp UP         &kp RIGHT
                               &kp HOME       &kp PG_DN      &kp END                                       &kp HOME       &kp PG_UP      &kp END
                                                             &trans          &trans         &trans         &trans
                                                             &trans &trans &trans &trans
                                                             &trans &trans &trans &trans &trans
            >;
        };
        symbols {
            label = "SYM";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            bindings = <
                &none          &none          &none          &none            &none          &none          &none          &none          &none          &none
                &kp EXCL       &kp AT         &kp HASH       &kp DOLLAR       &none          &none          &kp AMPERSAND  &kp ASTERISK   &kp PERCENT    &kp CARET
                               &kp GRAVE      &kp DQT        &kp UNDERSCORE                                 &kp BACKSLASH  &kp PIPE       &kp EQUAL
                                                             &kp TILDE        &trans         &trans         &trans
                                                             &trans &trans &trans &trans
                                                             &trans &trans &trans &trans &trans
            >;
        };
        function {
            label = "FUN";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            bindings = <
                &none          &bootloader    &trans         &trans         &trans         &kp F12        &kp F7         &kp F8         &kp F9         &none 
                &bootloader    &kp F12        &kp F11        &kp F10        &trans         &kp F11        &kp F4         &kp F5         &kp F6         &kp F10
                               &kp F9         &kp F8         &kp F7                                       &kp F1         &kp F2         &kp F3
                                                             &trans         &trans         &trans         &trans  
                                                             &trans &trans &trans &trans 
                                                             &trans &trans &trans &trans &trans
            >;
        };

    };
};
/*                KEY POSITIONS

  ╭────────────────────╮ ╭────────────────────╮
  │  0   1   2   3   4 │ │  5   6   7   8   9 │
  │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
  │     20  21  22     │ │     23  24  25     │
  ╰───────────╮ 26  27 │ │ 28  29 ╭───────────╯
              ╰────────╯ ╰────────╯            
*/ 

